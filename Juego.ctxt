#BlueJ class context
comment0.target=Juego
comment0.text=\r\n\ Clase\ base\ para\ el\ juego.\ Reune\ todos\ los\ componentes\ necesarios\ para\ su\ funcionamiento.\r\n\ \r\n\ @author\ M.B\ \r\n\ @version\ 1.0\r\n
comment1.params=nInvasores\ largoRenderizador\ altoRenderizador
comment1.target=Juego(int,\ int,\ int)
comment1.text=\r\n\ Constructor\r\n
comment10.params=
comment10.target=boolean\ juegoPerdido()
comment10.text=\r\n\ Devuelve\ verdadero\ cuando\ los\ invasores\ han\ llegado\ hasta\ la\ zona\ del\ jugador\r\n\ Llamado\ indirectamente\ por\ calcular()\r\n\ @return\ true\ si\ ha\ perdido\ false\ si\ ha\ no\ ha\ perdido\ todav\u00EDa\r\n
comment11.params=
comment11.target=boolean\ juegoGanado()
comment11.text=\r\n\ Devuelve\ verdadero\ cuando\ el\ jugador\ ha\ acabado\ con\ todos\ los\ invasores\r\n\ Llamado\ indirectamente\ por\ calcular()\r\n\ @return\ true\ si\ ha\ ganado\ false\ si\ no\ ha\ ganado\ todav\u00EDa\r\n
comment12.params=
comment12.target=void\ reiniciar()
comment12.text=\r\n\ M\u00E9todo\ sin\ implementanci\u00F3n.\ Reinicia\ el\ juego.\r\n
comment13.params=
comment13.target=GUIDrawer\ renderizador()
comment13.text=\r\n\ Devuelve\ el\ renderizador\ del\ juego,\ m\u00E9todo\ importante\ para\ el\ buen\ funcionamiento\ de\ este.\r\n\ @return\ guid\ GUIDrawer\ renderizador\ gr\u00E1ficos\ del\ juego\r\n
comment2.params=
comment2.target=boolean\ activo()
comment2.text=\r\n\ Devuelve\ el\ estado\ del\ juego\r\n\ @return\ activo\r\n
comment3.params=activo
comment3.target=void\ cambiarEstado(boolean)
comment3.text=\r\n\ Cambia\ el\ estado\ del\ juego\r\n\ @param\ activo\ -\ Si\ el\ juego\ est\u00E1\ activo\ o\ no\r\n
comment4.params=
comment4.target=void\ calcular()
comment4.text=\r\n\ M\u00E9todo\ principal\ del\ juego,\ es\ llamado\ por\ el\ contador\ principal\ cada\ 16\ ms\r\n
comment5.params=
comment5.target=void\ logicaJugador()
comment5.text=\r\n\ Contiene\ la\ l\u00F3gica\ del\ movimiento\ del\ jugador\ y\ controla\ que\ no\ se\ salga\r\n\ de\ la\ pantalla\ de\ juego.\ Llamado\ junto\ a\ calcular()\r\n
comment6.params=
comment6.target=void\ logicaProyectiles()
comment6.text=\r\n\ L\u00F3gica\ de\ las\ colisiones\ entre\ elementos\ del\ juego.\ Actualiza\ el\ movimiento\ de\r\n\ los\ proyectiles\ y\ las\ acciones\ tras\ una\ colisi\u00F3n.\ Llamado\ junto\ a\ calcular()\r\n
comment7.params=
comment7.target=void\ proyectilesInvasores()
comment7.text=\r\n\ Inicia\ un\ contador\ que\ permite\ que\ un\ invasor\ dispare\ aleatoriamente\ cada\r\n\ 4\ segundos.\r\n
comment8.params=e
comment8.target=void\ actionPerformed(java.awt.event.ActionEvent)
comment9.params=
comment9.target=void\ calcularEstado()
comment9.text=\r\n\ Comprueba\ si\ el\ juego\ ha\ de\ terminar\ o\ no,\ ya\ sea\ tras\ ganar\ o\ perder.\ \r\n\ Llamado\ en\ calcular()\r\n
numComments=14
